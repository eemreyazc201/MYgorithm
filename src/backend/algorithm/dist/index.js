(()=>{"use strict";class t{constructor(t){this.body=t.body,this.queries=t.queries,this.headers=t.headers,this.method=t.method,this.path=t.path,this.secret=t.secret}async json(){return JSON.parse(this.body)}}class s{constructor(t,s){this.status=s?.status??200,this.body=t,this.headers={"Content-Type":"application/json","Access-Control-Allow-Origin":"*",...s?.headers}}}async function e(t){let e=(await t.json()).posts;for(let t=0;t<e.length-1;t++)if(e[t].like.length<e[t+1].like.length){let s=e[t];e[t]=e[t+1],e[t+1]=s}return new s(JSON.stringify(e))}(async function(i){return await async function(e,i){const n=JSON.parse(i);let a;const r=n.method,o=new t(n);return"GET"==r&&e.GET?a=await e.GET(o):"POST"==r&&e.POST?a=await e.POST(o):"PATCH"==r&&e.PATCH?a=await e.PATCH(o):"PUT"==r&&e.PUT?a=await e.PUT(o):(a=new s("Not Found"),a.status=404),JSON.stringify(a)}({POST:e},i)}).apply(null,globalThis.scriptArgs).then((t=>globalThis.scriptOutput=t))})();